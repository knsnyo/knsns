generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  uid String @unique

  isDeleted Boolean @default(false)
  isHided Boolean @default(false)
  
  email String?
  displayName String
  photoUrl String?
  providerId String

  tagname String?
  intro String?
  link String?
  backgroundImage String?

  feeds Feed[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  follower Follow[] @relation(name: "follower")
  followed Follow[] @relation(name: "followed")
}

model Feed {
  id  String @id @default(auto()) @map("_id") @db.ObjectId

  isDeleted Boolean @default(false)
  isHided Boolean @default(false)

  content String
  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  // Author
  authorId String
  author User @relation(fields: [authorId], references: [uid])

  // Action
  action Action?
}

model Action {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  likeUserId String[] @default([])
  saveUserId String[] @default([])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  feedId String @db.ObjectId @unique
  feed Feed @relation(fields: [feedId], references: [id])

}

model Follow {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  userId String
  user User @relation(fields: [userId], references: [uid], name: "follower")

  followedUserId String
  followedUser User @relation(fields: [followedUserId], references: [uid], name: "followed")

  isDeleted Boolean @default(false)
  isHided Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}